{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andy\\\\Downloads\\\\Fullstack-RWD-Social-App\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nconst AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(fal);\n  const getIsLoggedIn = () => {\n    fetch(\"/api/loginForm\", {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setIsLoggedIn(data);\n    });\n  };\n  useEffect(() => {\n    // getIsLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      setIsLoggedIn,\n      getIsLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"/KvNMZr27ZN1r4v4UTndsSjlGt8=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","AuthContext","AuthContextProvider","children","isLoggedIn","setIsLoggedIn","fal","getIsLoggedIn","fetch","method","then","res","json","data"],"sources":["C:/Users/Andy/Downloads/Fullstack-RWD-Social-App/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nconst AuthContext = React.createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(fal);\r\n\r\n  const getIsLoggedIn = () => {\r\n    fetch(\"/api/loginForm\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setIsLoggedIn(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getIsLoggedIn();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn, getIsLoggedIn }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\nexport { AuthContextProvider };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAClE,MAAMC,WAAW,gBAAGJ,KAAK,CAACC,aAAa,EAAE;AAEzC,MAAMI,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAACO,GAAG,CAAC;EAEjD,MAAMC,aAAa,GAAG,MAAM;IAC1BC,KAAK,CAAC,gBAAgB,EAAE;MACtBC,MAAM,EAAE;IACV,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG,CAACC,IAAI,EAAE;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdR,aAAa,CAACQ,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEI,UAAU;MAAEC,aAAa;MAAEE;IAAc,CAAE;IAAA,UACvEJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAC,GAxBID,mBAAmB;AAAA,KAAnBA,mBAAmB;AA0BzB,eAAeD,WAAW;AAC1B,SAASC,mBAAmB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}