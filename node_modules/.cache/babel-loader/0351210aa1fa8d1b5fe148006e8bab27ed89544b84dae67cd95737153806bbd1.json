{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andy\\\\Downloads\\\\Fullstack-RWD-Social-App\\\\src\\\\scenes\\\\loginPage\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = _ref => {\n  _s();\n  let {\n    isLargeScreen\n  } = _ref;\n  const beige = \"#F3F3F3\";\n  const [toggleSignup, setToggleSignup] = useState(false);\n  const handleToggleSignup = () => {\n    setToggleSignup(!toggleSignup);\n  };\n  // Once the form is submitted, handleLogin function  navigate to home page\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    navigate('./home');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bgcolor: beige,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      width: \"100vw\",\n      height: \"100vh\",\n      pt: \"100px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        maxWidth: \"80%\",\n        bgcolor: \"white\",\n        width: \"50vw\",\n        maxHeight: \"280px\",\n        fontSize: \".8rem\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: isLargeScreen ? \"h6\" : \"body2\",\n          fontWeight: \"500\",\n          pt: \"1rem\",\n          textAlign: \"start\",\n          px: \"2rem\",\n          children: \"Welcome to FriendSphere!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), toggleSignup ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SignupForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleToggleSignup,\n            children: \"Already have an account? Login up here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleToggleSignup,\n            children: \"Don't have an account? Sign up here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"LgMiV/RsjcFVBSIhYOXSrEMGpqA=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useNavigate","Box","Typography","Button","LoginForm","SignupForm","LoginPage","isLargeScreen","beige","toggleSignup","setToggleSignup","handleToggleSignup","navigate","handleLogin"],"sources":["C:/Users/Andy/Downloads/Fullstack-RWD-Social-App/src/scenes/loginPage/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Typography, Button } from \"@mui/material\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport SignupForm from \"./SignupForm\";\r\n\r\nconst LoginPage = ({ isLargeScreen }) => {\r\n  const beige = \"#F3F3F3\";\r\n  const [toggleSignup, setToggleSignup] = useState(false);\r\n  \r\n  const handleToggleSignup = () => {\r\n    setToggleSignup(!toggleSignup);\r\n  };\r\n  // Once the form is submitted, handleLogin function  navigate to home page\r\n  const navigate = useNavigate();\r\n  const handleLogin = () =>{\r\n    navigate('./home')\r\n  }\r\n\r\n\r\n  return (\r\n    <Box bgcolor={beige}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        width=\"100vw\"\r\n        height=\"100vh\"\r\n        pt=\"100px\"\r\n      >\r\n        <Box\r\n          textAlign=\"center\"\r\n          maxWidth=\"80%\"\r\n          bgcolor=\"white\"\r\n          width=\"50vw\"\r\n          maxHeight=\"280px\"\r\n          fontSize=\".8rem\"\r\n        >\r\n          <Typography\r\n            variant={isLargeScreen ? \"h6\" : \"body2\"}\r\n            fontWeight=\"500\"\r\n            pt=\"1rem\"\r\n            textAlign=\"start\"\r\n            px=\"2rem\"\r\n          >\r\n            Welcome to FriendSphere!\r\n          </Typography>\r\n          {toggleSignup ? (\r\n            <>\r\n              <SignupForm />\r\n              <Button onClick={handleToggleSignup}>\r\n                Already have an account? Login up here\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <LoginForm />\r\n              <Button onClick={handleToggleSignup}>\r\n                Don't have an account? Sign up here\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AACvD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAAA;AAEtC,MAAMC,SAAS,GAAG,QAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC;EAClC,MAAMC,KAAK,GAAG,SAAS;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMY,kBAAkB,GAAG,MAAM;IAC/BD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EACD;EACA,MAAMG,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,WAAW,GAAG,MAAK;IACvBD,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAGD,oBACE,QAAC,GAAG;IAAC,OAAO,EAAEJ,KAAM;IAAA,uBAClB,QAAC,GAAG;MACF,OAAO,EAAC,MAAM;MACd,cAAc,EAAC,QAAQ;MACvB,KAAK,EAAC,OAAO;MACb,MAAM,EAAC,OAAO;MACd,EAAE,EAAC,OAAO;MAAA,uBAEV,QAAC,GAAG;QACF,SAAS,EAAC,QAAQ;QAClB,QAAQ,EAAC,KAAK;QACd,OAAO,EAAC,OAAO;QACf,KAAK,EAAC,MAAM;QACZ,SAAS,EAAC,OAAO;QACjB,QAAQ,EAAC,OAAO;QAAA,wBAEhB,QAAC,UAAU;UACT,OAAO,EAAED,aAAa,GAAG,IAAI,GAAG,OAAQ;UACxC,UAAU,EAAC,KAAK;UAChB,EAAE,EAAC,MAAM;UACT,SAAS,EAAC,OAAO;UACjB,EAAE,EAAC,MAAM;UAAA,UACV;QAED;UAAA;UAAA;UAAA;QAAA,QAAa,EACZE,YAAY,gBACX;UAAA,wBACE,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA,QAAG,eACd,QAAC,MAAM;YAAC,OAAO,EAAEE,kBAAmB;YAAA,UAAC;UAErC;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,gBACR,gBAEH;UAAA,wBACE,QAAC,SAAS;YAAA;YAAA;YAAA;UAAA,QAAG,eACb,QAAC,MAAM;YAAC,OAAO,EAAEA,kBAAmB;YAAA,UAAC;UAErC;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,gBAEZ;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA3DIL,SAAS;EAAA,QAQIN,WAAW;AAAA;AAAA,KARxBM,SAAS;AA6Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}